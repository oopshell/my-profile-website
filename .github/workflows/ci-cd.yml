name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4


    # Backend setup
    - name: Set up JDK 22
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle'
        java-version: '22'

    - name: Build Backend
      run: |
        cd backend-serverless
        mvn clean package


    # Frontend setup
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install

    - name: Build Frontend with Vite
      run: |
        cd frontend
        npm run build

    - name: Run Frontend Tests
      run: |
        cd frontend
        npm run test


#    - name: Deploy Backend to AWS EC2
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        AWS_REGION: ${{ secrets.AWS_REGION }}
#        EC2_HOST: ${{ secrets.EC2_HOST }}
#        EC2_USER: ${{ secrets.EC2_USER }}
#        EC2_KEY: ${{ secrets.EC2_KEY }}
#      run: |
#        echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
#        chmod 400 ec2_key.pem
#        scp -o StrictHostKeyChecking=no -i ec2_key.pem backend/build/libs/my-profile-0.0.1-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/ubuntu/
#        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << 'EOF'
#          ls
#          rm my-profile-backend/my-profile-0.0.1-SNAPSHOT.jar
#          mv my-profile-0.0.1-SNAPSHOT.jar my-profile-backend
#          ls
#          pm2 restart my-profile-backend
#        EOF


#      - name: Upload maven package to S3
#        run: |
#          aws s3 cp backend-serverless/target/my-profile-backend-serverless-1.0-TITAN-lambda-package.zip s3://my-profile-backend-serverless/my-profile-backend-serverless-1.0-TITAN-lambda-package.zip
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}
#
#      - name: Update the AWS Lambda function with the new code from S3
#        run: |
#          aws lambda update-function-code \
#            --function-name myProfileApi \
#            --s3-bucket my-profile-backend-serverless \
#            --s3-key my-profile-backend-serverless-1.0-TITAN-lambda-package.zip \
#            --publish
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}


    - name: Deploy Frontend to AWS S3 and CloudFront
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws s3 sync frontend/dist/ s3://tiantian-li.me/
        aws s3 cp frontend/resume-tiantian_li.pdf s3://tiantian-li.me/resume-tiantian_li.pdf
        aws cloudfront create-invalidation --distribution-id EDDRCIACK0MA --paths "/*"
